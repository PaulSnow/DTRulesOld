/** 
 * Copyright 2004-2008 MTBJ, Inc.  
 *   
 * Licensed under the Apache License, Version 2.0 (the "License");  
 * you may not use this file except in compliance with the License.  
 * You may obtain a copy of the License at  
 *   
 *      http://www.apache.org/licenses/LICENSE-2.0  
 *   
 * Unless required by applicable law or agreed to in writing, software  
 * distributed under the License is distributed on an "AS IS" BASIS,  
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
 * See the License for the specific language governing permissions and  
 * limitations under the License.  
 */  
 Warning : Terminal "IDENT" was declared but never used
===== Terminals =====
[0]EOF [1]error [2]ABSOLUTEVALUE [3]ACTION [4]ADD 
[5]AFTER [6]ALL [7]ALLOWING [8]AND [9]ARRAY 
[10]ARRAY_OF_VALUES [11]ARROW [12]ASCENDINGORDER [13]ASSIGN [14]ATTRIBUTE 
[15]AT [16]BEFORE [17]BETWEEN [18]BOOL_FUNCTION [19]BOOLEAN 
[20]BY [21]CACHE [22]CHANGE [23]CLEAR [24]CLONE 
[25]COLON [26]CONTEXT [27]COMMA [28]CONDITION [29]COPY 
[30]CURRENT_DATE [31]CURRENT_TIMESTAMP [32]DATE [33]DAYS [34]DEBUG 
[35]DECIMAL_PLACES [36]DECREMENT [37]DESCENDINGORDER [38]DIVIDE [39]DOES 
[40]DOUBLE [41]EACH [42]EARLIEST [43]ELEMENT [44]ELSE 
[45]ELSEIF [46]ELSEIFNONEAREFOUND [47]END [48]ENDIF [49]ENTITY 
[50]EQ [51]EQUAL [52]ERRORCODE [53]FIRST [54]FLOAT 
[55]FOR [56]FORALL [57]FROM [58]GET [59]GREATER 
[60]GT [61]GTE [62]HASA [63]HAVE [64]IF 
[65]IN [66]INCLUDE [67]INCLUDES [68]INCREMENT [69]INTEGER 
[70]IS [71]ISNOTNULL [72]ISNULL [73]ITS [74]LBRACE 
[75]LCURLY [76]LENGTH [77]LESS [78]LOCAL [79]LONG 
[80]LOWER_CASE [81]LPAREN [82]LT [83]LTE [84]MAP 
[85]MATCH [86]MATCHES [87]MEMBER [88]MINUS [89]MONTHS 
[90]MULTIPLY [91]NAME [92]NAMEOF [93]NEQ [94]NEW 
[95]NO [96]NOT [97]NULL [98]NUMBEROF [99]OF 
[100]ON [101]ONE [102]OR [103]PERFORM [104]PLUS 
[105]POSSESSIVE [106]QUESTIONMARK [107]RANDOMIZE [108]RARRAY [109]RBOOLEAN 
[110]RBRACE [111]RCURLY [112]RDATE [113]RDECISIONTABLE [114]RDOUBLE 
[115]RELATIONSHIP_BETWEEN [116]REMOVE [117]RENTITY [118]RINVALID [119]RLONG 
[120]RNAME [121]RNULL [122]ROPERATOR [123]ROUNDED [124]RPAREN 
[125]RSTRING [126]RTABLE [127]RXMLVALUE [128]SEMI [129]SET 
[130]SORT [131]STARTS_WITH [132]STR [133]STRING [134]SUBSTRING 
[135]SUBTRACT [136]SUM_OF [137]TABLE [138]TABLEINFORMATION [139]THAN 
[140]THEN [141]THENAME [142]THERE [143]THIS [144]TIMES 
[145]THROUGH [146]TO [147]TOBEREMOVED [148]TOKENIZE [149]TRIM 
[150]UMINUS [151]UNDEFINED [152]UPPER_CASE [153]USING [154]VALUE 
[155]WAS [156]WHERE [157]WITH [158]WITH_BOUNDRY [159]YEARS 
[160]YEAROF [161]IDENT [162]MAXPRINT 

===== Non terminals =====
[0]eq [1]neq [2]gt [3]gte [4]lt 
[5]lte [6]done [7]statement_list [8]statement [9]number 
[10]inthe [11]iexpr [12]fexpr [13]bexpr [14]eexpr 
[15]nexpr [16]texpr [17]strexpr [18]indx_expr [19]dexpr 
[20]array_expr [21]isnull [22]isnotnull [23]includeSearch [24]forblock 
[25]forallblock [26]forallctl [27]forfirstctl [28]ifblock [29]usingblock 
[30]firstblock [31]block [32]thereis [33]setstatement [34]usingstatement 
[35]performstatement [36]debugstatement [37]ifstatement [38]addtostatement [39]addtodest 
[40]subtodest [41]clearstatement [42]randomstatements [43]commonerror [44]tablelist 
[45]operatorlist [46]operatorstatements [47]contextstatement [48]localvariables [49]context_for_table 
[50]datestatement [51]xmlvaluestatements [52]separator [53]blist [54]ifcontinue 
[55]left_iexpr [56]left_fexpr [57]left_bexpr [58]left_eexpr [59]left_strexpr 
[60]left_dexpr [61]left_ArrayRef [62]left_texpr [63]usingEntityRef [64]colonRef 
[65]possessiveRef [66]array_lit [67]array_list [68]maximusstatements [69]parameterlist 
[70]NT$0 

===== Productions =====
[0] done ::= ACTION statement_list 
[1] $START ::= done EOF 
[2] done ::= CONDITION bexpr SEMI 
[3] done ::= CONDITION debugstatement SEMI bexpr SEMI 
[4] done ::= CONDITION bexpr SEMI debugstatement SEMI 
[5] done ::= CONTEXT context_for_table SEMI 
[6] statement_list ::= statement_list block 
[7] statement_list ::= block 
[8] separator ::= SEMI 
[9] separator ::= COMMA 
[10] statement ::= setstatement separator 
[11] statement ::= performstatement separator 
[12] statement ::= debugstatement separator 
[13] statement ::= ifstatement separator 
[14] statement ::= addtostatement separator 
[15] statement ::= clearstatement separator 
[16] statement ::= usingstatement separator 
[17] statement ::= randomstatements separator 
[18] statement ::= commonerror separator 
[19] statement ::= maximusstatements separator 
[20] statement ::= operatorstatements separator 
[21] statement ::= contextstatement separator 
[22] statement ::= datestatement separator 
[23] statement ::= xmlvaluestatements separator 
[24] statement ::= separator 
[25] parameterlist ::= AND parameterlist 
[26] parameterlist ::= strexpr COMMA parameterlist 
[27] parameterlist ::= iexpr COMMA parameterlist 
[28] parameterlist ::= fexpr COMMA parameterlist 
[29] parameterlist ::= eexpr COMMA parameterlist 
[30] parameterlist ::= strexpr 
[31] parameterlist ::= iexpr 
[32] parameterlist ::= fexpr 
[33] parameterlist ::= eexpr 
[34] maximusstatements ::= MAXPRINT parameterlist 
[35] maximusstatements ::= SET ERRORCODE nexpr 
[36] maximusstatements ::= SET ERRORCODE nexpr WITH strexpr 
[37] maximusstatements ::= SET ERRORCODE array_expr WITH strexpr 
[38] usingblock ::= usingEntityRef usingblock 
[39] usingblock ::= usingEntityRef COMMA usingblock 
[40] usingblock ::= block 
[41] possessiveRef ::= POSSESSIVE COMMA possessiveRef 
[42] possessiveRef ::= POSSESSIVE COMMA 
[43] possessiveRef ::= RENTITY ARROW possessiveRef 
[44] possessiveRef ::= RENTITY ARROW 
[45] possessiveRef ::= COLON RENTITY COLON possessiveRef 
[46] possessiveRef ::= COLON RENTITY COLON 
[47] colonRef ::= possessiveRef 
[48] forallblock ::= block forallctl 
[49] context_for_table ::= forallctl 
[50] context_for_table ::= forfirstctl 
[51] context_for_table ::= contextstatement 
[52] context_for_table ::= localvariables 
[53] localvariables ::= LOCAL ENTITY UNDEFINED 
[54] localvariables ::= LOCAL ENTITY UNDEFINED ASSIGN eexpr 
[55] localvariables ::= LOCAL ENTITY RENTITY 
[56] localvariables ::= LOCAL LONG UNDEFINED 
[57] localvariables ::= LOCAL LONG UNDEFINED ASSIGN number 
[58] localvariables ::= LOCAL LONG RLONG 
[59] localvariables ::= LOCAL DOUBLE UNDEFINED 
[60] localvariables ::= LOCAL DOUBLE UNDEFINED ASSIGN number 
[61] localvariables ::= LOCAL DOUBLE RDOUBLE 
[62] localvariables ::= LOCAL BOOLEAN UNDEFINED 
[63] localvariables ::= LOCAL BOOLEAN UNDEFINED ASSIGN bexpr 
[64] localvariables ::= LOCAL BOOLEAN RBOOLEAN 
[65] localvariables ::= LOCAL DATE UNDEFINED 
[66] localvariables ::= LOCAL DATE UNDEFINED ASSIGN dexpr 
[67] localvariables ::= LOCAL DATE RDATE 
[68] localvariables ::= LOCAL ARRAY UNDEFINED 
[69] localvariables ::= LOCAL ARRAY UNDEFINED ASSIGN array_expr 
[70] localvariables ::= LOCAL ARRAY RARRAY 
[71] localvariables ::= LOCAL STRING UNDEFINED 
[72] localvariables ::= LOCAL STRING UNDEFINED ASSIGN strexpr 
[73] localvariables ::= LOCAL STRING RSTRING 
[74] ifstatement ::= IF bexpr THEN block ENDIF 
[75] ifstatement ::= IF bexpr THEN block ELSE block ENDIF 
[76] forallctl ::= FORALL eexpr AND ITS eexpr IN array_expr 
[77] forallctl ::= FORALL eexpr AND ITS eexpr IN array_expr ALLOWING array_expr TOBEREMOVED 
[78] forallctl ::= FORALL eexpr AND ITS eexpr IN array_expr WHERE bexpr 
[79] forallctl ::= FORALL eexpr AND ITS eexpr IN array_expr WHERE bexpr ALLOWING array_expr TOBEREMOVED 
[80] forallctl ::= FORALL array_expr 
[81] forallctl ::= FORALL array_expr ALLOWING array_expr TOBEREMOVED 
[82] forallctl ::= FORALL array_expr IN eexpr 
[83] forallctl ::= FORALL array_expr IN eexpr ALLOWING array_expr TOBEREMOVED 
[84] forallctl ::= FORALL array_expr IN eexpr WHERE bexpr 
[85] forallctl ::= FORALL array_expr WHERE bexpr 
[86] forallctl ::= FORALL array_expr WHERE bexpr ALLOWING array_expr TOBEREMOVED 
[87] forblock ::= array_expr block 
[88] forblock ::= eexpr IN array_expr block 
[89] forblock ::= eexpr IN array_expr WHERE bexpr block 
[90] forblock ::= array_expr WHERE bexpr block 
[91] forblock ::= eexpr AND ITS eexpr IN array_expr block 
[92] forblock ::= eexpr AND ITS eexpr IN array_expr WHERE bexpr block 
[93] forfirstctl ::= FOR FIRST OF array_expr WHERE bexpr 
[94] forfirstctl ::= FOR FIRST OF array_expr AND ITS eexpr WHERE bexpr 
[95] forfirstctl ::= FOR FIRST IN array_expr WHERE bexpr 
[96] firstblock ::= FOR FIRST OF array_expr WHERE bexpr THEN block ELSEIFNONEAREFOUND block 
[97] firstblock ::= FOR FIRST OF array_expr AND ITS eexpr WHERE bexpr THEN block ELSEIFNONEAREFOUND block 
[98] firstblock ::= forfirstctl THEN block 
[99] block ::= LCURLY statement_list RCURLY 
[100] block ::= USING usingblock 
[101] block ::= forallblock 
[102] block ::= FORALL forblock 
[103] block ::= firstblock 
[104] block ::= IF ifblock 
[105] block ::= block separator 
[106] block ::= statement 
[107] usingstatement ::= USING usingblock separator 
[108] left_iexpr ::= RLONG 
[109] left_iexpr ::= colonRef left_iexpr 
[110] left_fexpr ::= RDOUBLE 
[111] left_fexpr ::= colonRef left_fexpr 
[112] left_bexpr ::= RBOOLEAN 
[113] left_bexpr ::= colonRef left_bexpr 
[114] left_eexpr ::= RENTITY 
[115] left_eexpr ::= colonRef left_eexpr 
[116] left_strexpr ::= RSTRING 
[117] left_strexpr ::= colonRef left_strexpr 
[118] left_dexpr ::= RDATE 
[119] left_dexpr ::= colonRef left_dexpr 
[120] left_texpr ::= RTABLE 
[121] left_texpr ::= colonRef left_texpr 
[122] left_ArrayRef ::= RARRAY 
[123] left_ArrayRef ::= colonRef left_ArrayRef 
[124] setstatement ::= SET left_iexpr ASSIGN number 
[125] setstatement ::= SET left_fexpr ASSIGN number 
[126] setstatement ::= SET left_bexpr ASSIGN bexpr 
[127] setstatement ::= SET left_eexpr ASSIGN eexpr 
[128] setstatement ::= SET left_strexpr ASSIGN strexpr 
[129] setstatement ::= SET left_bexpr ASSIGN nexpr 
[130] setstatement ::= SET left_dexpr ASSIGN dexpr 
[131] setstatement ::= SET left_texpr ASSIGN texpr 
[132] setstatement ::= SET left_ArrayRef ASSIGN eexpr 
[133] setstatement ::= SET left_ArrayRef ASSIGN strexpr 
[134] setstatement ::= SET left_ArrayRef ASSIGN fexpr 
[135] setstatement ::= SET left_ArrayRef ASSIGN iexpr 
[136] setstatement ::= SET left_ArrayRef ASSIGN dexpr 
[137] setstatement ::= SET left_ArrayRef ASSIGN array_expr 
[138] setstatement ::= INCREMENT RLONG 
[139] setstatement ::= INCREMENT RDOUBLE 
[140] setstatement ::= DECREMENT RLONG 
[141] setstatement ::= DECREMENT RDOUBLE 
[142] performstatement ::= RDECISIONTABLE 
[143] performstatement ::= PERFORM RDECISIONTABLE 
[144] performstatement ::= PERFORM NAME 
[145] debugstatement ::= DEBUG strexpr 
[146] debugstatement ::= DEBUG bexpr 
[147] debugstatement ::= DEBUG iexpr 
[148] debugstatement ::= DEBUG fexpr 
[149] debugstatement ::= DEBUG eexpr 
[150] debugstatement ::= DEBUG dexpr 
[151] debugstatement ::= DEBUG array_expr 
[152] ifblock ::= bexpr THEN statement_list ifcontinue 
[153] ifcontinue ::= ENDIF 
[154] ifcontinue ::= ELSE statement_list ENDIF 
[155] ifcontinue ::= ELSEIF ifblock 
[156] number ::= iexpr 
[157] number ::= fexpr 
[158] addtodest ::= array_expr 
[159] addtodest ::= RLONG 
[160] addtodest ::= RDOUBLE 
[161] subtodest ::= RLONG 
[162] subtodest ::= RDOUBLE 
[163] addtostatement ::= ADD array_expr TO array_expr 
[164] addtostatement ::= ADD eexpr TO addtodest 
[165] addtostatement ::= ADD eexpr TO addtodest AND TO addtodest 
[166] addtostatement ::= ADD strexpr TO addtodest 
[167] addtostatement ::= ADD strexpr TO addtodest AND TO addtodest 
[168] addtostatement ::= ADD dexpr TO addtodest 
[169] addtostatement ::= ADD dexpr TO addtodest AND TO addtodest 
[170] addtostatement ::= ADD number TO addtodest 
[171] addtostatement ::= ADD number TO addtodest AND TO addtodest 
[172] addtostatement ::= SUBTRACT number FROM subtodest 
[173] addtostatement ::= ADD eexpr IF NOT MEMBER TO array_expr 
[174] addtostatement ::= ADD eexpr IF NOT MEMBER TO array_expr AND TO array_expr 
[175] addtostatement ::= ADD strexpr IF NOT MEMBER TO array_expr 
[176] addtostatement ::= ADD strexpr IF NOT MEMBER TO array_expr AND TO array_expr 
[177] contextstatement ::= ADD eexpr TO CONTEXT OF THIS TABLE 
[178] contextstatement ::= ADD eexpr TO CONTEXT FOR THIS TABLE 
[179] randomstatements ::= REMOVE iexpr ELEMENT FROM array_expr ARRAY 
[180] randomstatements ::= REMOVE EACH eexpr FROM array_expr WHERE bexpr 
[181] randomstatements ::= REMOVE nexpr FROM array_expr ARRAY 
[182] randomstatements ::= REMOVE eexpr FROM array_expr ARRAY 
[183] randomstatements ::= RANDOMIZE array_expr 
[184] randomstatements ::= CLEAR array_expr 
[185] randomstatements ::= REMOVE eexpr FROM CACHE 
[186] randomstatements ::= SORT array_expr IN ASCENDINGORDER BY nexpr 
[187] randomstatements ::= SORT array_expr IN DESCENDINGORDER BY nexpr 
[188] operatorlist ::= strexpr COMMA operatorlist 
[189] operatorlist ::= iexpr COMMA operatorlist 
[190] operatorlist ::= fexpr COMMA operatorlist 
[191] operatorlist ::= eexpr COMMA operatorlist 
[192] operatorlist ::= strexpr 
[193] operatorlist ::= iexpr 
[194] operatorlist ::= fexpr 
[195] operatorlist ::= eexpr 
[196] operatorstatements ::= ROPERATOR LPAREN operatorlist RPAREN 
[197] xmlvaluestatements ::= RXMLVALUE COLON SET ATTRIBUTE strexpr ASSIGN strexpr 
[198] array_expr ::= MAP array_expr THROUGH texpr 
[199] array_expr ::= LPAREN array_expr RPAREN 
[200] array_expr ::= RARRAY 
[201] array_expr ::= LPAREN ARRAY RPAREN NAME 
[202] array_expr ::= colonRef RARRAY 
[203] array_expr ::= GET COPY OF array_expr 
[204] array_expr ::= COPY OF array_expr 
[205] array_expr ::= NEW ENTITY ARRAY 
[206] array_expr ::= NEW STR ARRAY 
[207] array_expr ::= array_lit 
[208] array_expr ::= ARRAY_OF_VALUES LBRACE array_list RBRACE 
[209] array_expr ::= TOKENIZE strexpr BY strexpr 
[210] array_lit ::= LBRACE array_list RBRACE 
[211] array_list ::= array_list COMMA strexpr 
[212] array_list ::= array_list COMMA iexpr 
[213] array_list ::= array_list COMMA eexpr 
[214] array_list ::= array_list COMMA fexpr 
[215] array_list ::= array_list COMMA nexpr 
[216] array_list ::= nexpr 
[217] array_list ::= fexpr 
[218] array_list ::= eexpr 
[219] array_list ::= iexpr 
[220] array_list ::= strexpr 
[221] indx_expr ::= array_expr LBRACE iexpr RBRACE 
[222] eexpr ::= RENTITY 
[223] eexpr ::= LPAREN eexpr RPAREN 
[224] eexpr ::= indx_expr 
[225] eexpr ::= NEW nexpr ENTITY 
[226] eexpr ::= NEW RENTITY ENTITY 
[227] eexpr ::= CLONE OF eexpr 
[228] eexpr ::= colonRef RENTITY 
[229] eexpr ::= LPAREN ENTITY RPAREN RTABLE LPAREN tablelist RPAREN 
[230] eexpr ::= FIRST eexpr IN array_expr WHERE bexpr 
[231] eexpr ::= FIRST eexpr WHERE bexpr 
[232] eexpr ::= strexpr OF eexpr 
[233] datestatement ::= SUBTRACT number YEARS FROM RDATE 
[234] datestatement ::= SUBTRACT number MONTHS FROM RDATE 
[235] datestatement ::= SUBTRACT number DAYS FROM RDATE 
[236] datestatement ::= ADD number YEARS TO RDATE 
[237] datestatement ::= ADD number MONTHS TO RDATE 
[238] datestatement ::= ADD number DAYS TO RDATE 
[239] dexpr ::= LPAREN dexpr RPAREN 
[240] dexpr ::= RDATE 
[241] dexpr ::= LPAREN DATE RPAREN strexpr 
[242] dexpr ::= DATE LPAREN strexpr RPAREN 
[243] dexpr ::= LPAREN DATE RPAREN indx_expr 
[244] dexpr ::= LPAREN DATE RPAREN RARRAY LBRACE iexpr RBRACE 
[245] dexpr ::= USING eexpr LPAREN dexpr RPAREN 
[246] dexpr ::= colonRef RDATE 
[247] dexpr ::= LPAREN number DAYS RPAREN 
[248] dexpr ::= dexpr PLUS dexpr 
[249] dexpr ::= dexpr MINUS dexpr 
[250] dexpr ::= LPAREN DATE RPAREN RTABLE LPAREN tablelist RPAREN 
[251] dexpr ::= SUBTRACT number YEARS FROM dexpr 
[252] dexpr ::= SUBTRACT number MONTHS FROM RDATE 
[253] dexpr ::= SUBTRACT number DAYS FROM RDATE 
[254] dexpr ::= ADD number YEARS TO RDATE 
[255] dexpr ::= ADD number MONTHS TO RDATE 
[256] dexpr ::= ADD number DAYS TO RDATE 
[257] dexpr ::= FIRST OF YEARS OF dexpr 
[258] dexpr ::= FIRST OF MONTHS OF dexpr 
[259] dexpr ::= END OF MONTHS OF dexpr 
[260] dexpr ::= EARLIEST OF array_expr AFTER dexpr 
[261] nexpr ::= RNAME 
[262] nexpr ::= NAMEOF eexpr 
[263] nexpr ::= THENAME strexpr 
[264] nexpr ::= NAME RARRAY LBRACE iexpr RBRACE 
[265] nexpr ::= NAME 
[266] nexpr ::= USING eexpr LPAREN nexpr RPAREN 
[267] nexpr ::= colonRef RNAME 
[268] nexpr ::= LPAREN NAME RPAREN strexpr 
[269] tablelist ::= strexpr COMMA tablelist 
[270] tablelist ::= strexpr 
[271] texpr ::= RTABLE 
[272] texpr ::= NEW strexpr TABLE OF strexpr 
[273] strexpr ::= RXMLVALUE 
[274] strexpr ::= RXMLVALUE COLON GET ATTRIBUTE strexpr 
[275] strexpr ::= SUBSTRING OF strexpr FROM iexpr TO iexpr 
[276] strexpr ::= TABLEINFORMATION 
[277] strexpr ::= STRING VALUE OF operatorstatements 
[278] strexpr ::= LPAREN STR RPAREN texpr LPAREN tablelist RPAREN 
[279] strexpr ::= RSTRING 
[280] strexpr ::= colonRef strexpr 
[281] strexpr ::= STRING 
[282] strexpr ::= strexpr PLUS strexpr 
[283] strexpr ::= LPAREN STR RPAREN fexpr 
[284] strexpr ::= LPAREN STR RPAREN iexpr 
[285] strexpr ::= LPAREN STR RPAREN dexpr 
[286] strexpr ::= LPAREN strexpr RPAREN 
[287] strexpr ::= strexpr PLUS iexpr 
[288] strexpr ::= strexpr PLUS fexpr 
[289] strexpr ::= strexpr PLUS bexpr 
[290] strexpr ::= strexpr PLUS nexpr 
[291] strexpr ::= strexpr PLUS eexpr 
[292] strexpr ::= strexpr PLUS dexpr 
[293] strexpr ::= strexpr PLUS array_expr 
[294] strexpr ::= strexpr PLUS RNULL 
[295] strexpr ::= strexpr PLUS RINVALID 
[296] strexpr ::= TRIM LPAREN strexpr RPAREN 
[297] strexpr ::= LPAREN STR RPAREN indx_expr 
[298] strexpr ::= CHANGE strexpr TO LOWER_CASE 
[299] NT$0 ::= 
[300] strexpr ::= CHANGE strexpr TO UPPER_CASE NT$0 GET CURRENT_DATE 
[301] strexpr ::= GET CURRENT_TIMESTAMP 
[302] strexpr ::= USING eexpr LPAREN strexpr RPAREN 
[303] strexpr ::= RELATIONSHIP_BETWEEN eexpr AND eexpr 
[304] fexpr ::= FLOAT 
[305] fexpr ::= colonRef RDOUBLE 
[306] fexpr ::= RDOUBLE 
[307] fexpr ::= LPAREN DOUBLE RPAREN strexpr 
[308] fexpr ::= LPAREN DOUBLE RPAREN RTABLE LPAREN tablelist RPAREN 
[309] fexpr ::= fexpr PLUS iexpr 
[310] fexpr ::= fexpr PLUS fexpr 
[311] fexpr ::= iexpr PLUS fexpr 
[312] fexpr ::= fexpr MINUS iexpr 
[313] fexpr ::= iexpr MINUS fexpr 
[314] fexpr ::= fexpr MINUS fexpr 
[315] fexpr ::= fexpr TIMES iexpr 
[316] fexpr ::= iexpr TIMES fexpr 
[317] fexpr ::= fexpr TIMES fexpr 
[318] fexpr ::= fexpr DIVIDE iexpr 
[319] fexpr ::= iexpr DIVIDE fexpr 
[320] fexpr ::= fexpr DIVIDE fexpr 
[321] fexpr ::= MINUS fexpr 
[322] fexpr ::= LPAREN fexpr RPAREN 
[323] fexpr ::= LPAREN DOUBLE RPAREN indx_expr 
[324] fexpr ::= ADD TO RDOUBLE number 
[325] fexpr ::= SUBTRACT FROM RDOUBLE number 
[326] fexpr ::= MULTIPLY RDOUBLE BY number 
[327] fexpr ::= DIVIDE RDOUBLE BY number 
[328] fexpr ::= ABSOLUTEVALUE OF fexpr 
[329] fexpr ::= USING eexpr LPAREN fexpr RPAREN 
[330] fexpr ::= DOUBLE VALUE OF operatorstatements 
[331] fexpr ::= fexpr ROUNDED 
[332] fexpr ::= fexpr ROUNDED TO iexpr DECIMAL_PLACES 
[333] fexpr ::= fexpr ROUNDED TO iexpr DECIMAL_PLACES WITH_BOUNDRY fexpr 
[334] fexpr ::= SUM_OF fexpr IN array_expr 
[335] iexpr ::= iexpr PLUS iexpr 
[336] iexpr ::= iexpr MINUS iexpr 
[337] iexpr ::= iexpr TIMES iexpr 
[338] iexpr ::= iexpr DIVIDE iexpr 
[339] iexpr ::= INTEGER 
[340] iexpr ::= MINUS iexpr 
[341] iexpr ::= LPAREN iexpr RPAREN 
[342] iexpr ::= RLONG 
[343] iexpr ::= GET DAYS IN YEAROF dexpr 
[344] iexpr ::= GET DAYS IN MONTHS FOR dexpr 
[345] iexpr ::= GET DAYS OF MONTHS FOR dexpr 
[346] iexpr ::= colonRef RLONG 
[347] iexpr ::= LPAREN LONG RPAREN indx_expr 
[348] iexpr ::= LPAREN LONG RPAREN strexpr 
[349] iexpr ::= LPAREN LONG RPAREN number 
[350] iexpr ::= LPAREN LONG RPAREN RTABLE LPAREN tablelist RPAREN 
[351] iexpr ::= NUMBEROF array_expr 
[352] iexpr ::= NUMBEROF array_expr WHERE bexpr 
[353] iexpr ::= LENGTH OF array_expr 
[354] iexpr ::= LENGTH OF strexpr 
[355] iexpr ::= USING array_expr number 
[356] iexpr ::= ADD TO RLONG number 
[357] iexpr ::= SUBTRACT FROM RLONG number 
[358] iexpr ::= MULTIPLY RLONG BY number 
[359] iexpr ::= DIVIDE RLONG BY number 
[360] iexpr ::= ABSOLUTEVALUE OF iexpr 
[361] iexpr ::= USING eexpr LPAREN iexpr RPAREN 
[362] iexpr ::= DAYS FROM dexpr TO dexpr 
[363] iexpr ::= MONTHS FROM dexpr TO dexpr 
[364] iexpr ::= YEARS FROM dexpr TO dexpr 
[365] iexpr ::= GET YEAROF dexpr 
[366] iexpr ::= LONG VALUE OF operatorstatements 
[367] iexpr ::= SUM_OF iexpr IN array_expr 
[368] includeSearch ::= VALUE number 
[369] includeSearch ::= DATE dexpr 
[370] includeSearch ::= eexpr 
[371] includeSearch ::= STRING strexpr 
[372] inthe ::= IN 
[373] inthe ::= FOR 
[374] inthe ::= ON 
[375] thereis ::= THERE IS 
[376] thereis ::= IS THERE 
[377] blist ::= strexpr COMMA blist 
[378] blist ::= OR strexpr 
[379] bexpr ::= array_expr DOES NOT INCLUDE includeSearch 
[380] bexpr ::= array_expr DOES INCLUDE includeSearch 
[381] bexpr ::= array_expr INCLUDES includeSearch 
[382] bexpr ::= thereis MATCH FORALL array_expr TO nexpr IN array_expr 
[383] bexpr ::= thereis eexpr WHERE bexpr 
[384] bexpr ::= thereis eexpr inthe eexpr WHERE bexpr 
[385] bexpr ::= thereis eexpr inthe array_expr WHERE bexpr 
[386] bexpr ::= HASA eexpr WHERE bexpr 
[387] bexpr ::= THERE IS NO eexpr WHERE bexpr 
[388] bexpr ::= THERE IS NO eexpr inthe eexpr WHERE bexpr 
[389] bexpr ::= THERE IS NO eexpr inthe array_expr WHERE bexpr 
[390] bexpr ::= ALL array_expr HAVE bexpr 
[391] bexpr ::= ONE OF array_expr HASA bexpr 
[392] bexpr ::= eexpr DOES NOT HAVE strexpr 
[393] bexpr ::= eexpr HASA strexpr 
[394] bexpr ::= eexpr HASA strexpr WHERE bexpr 
[395] bexpr ::= eexpr IS strexpr OF eexpr 
[396] bexpr ::= iexpr eq iexpr 
[397] bexpr ::= fexpr eq iexpr 
[398] bexpr ::= iexpr eq fexpr 
[399] bexpr ::= fexpr eq fexpr 
[400] bexpr ::= iexpr neq iexpr 
[401] bexpr ::= fexpr neq iexpr 
[402] bexpr ::= iexpr neq fexpr 
[403] bexpr ::= fexpr neq fexpr 
[404] bexpr ::= iexpr gt iexpr 
[405] bexpr ::= fexpr gt iexpr 
[406] bexpr ::= iexpr gt fexpr 
[407] bexpr ::= fexpr gt fexpr 
[408] bexpr ::= iexpr gte iexpr 
[409] bexpr ::= fexpr gte iexpr 
[410] bexpr ::= iexpr gte fexpr 
[411] bexpr ::= fexpr gte fexpr 
[412] bexpr ::= iexpr lt iexpr 
[413] bexpr ::= fexpr lt iexpr 
[414] bexpr ::= iexpr lt fexpr 
[415] bexpr ::= fexpr lt fexpr 
[416] bexpr ::= iexpr lte iexpr 
[417] bexpr ::= fexpr lte iexpr 
[418] bexpr ::= iexpr lte fexpr 
[419] bexpr ::= fexpr lte fexpr 
[420] bexpr ::= RBOOLEAN 
[421] bexpr ::= colonRef RBOOLEAN 
[422] bexpr ::= nexpr eq nexpr 
[423] bexpr ::= nexpr eq strexpr 
[424] bexpr ::= nexpr neq nexpr 
[425] bexpr ::= nexpr neq strexpr 
[426] bexpr ::= strexpr eq blist 
[427] bexpr ::= strexpr eq strexpr 
[428] bexpr ::= strexpr neq strexpr 
[429] bexpr ::= strexpr AT iexpr STARTS_WITH strexpr 
[430] bexpr ::= strexpr STARTS_WITH strexpr 
[431] bexpr ::= strexpr IS ONE OF array_expr 
[432] bexpr ::= strexpr IS NOT ONE OF array_expr 
[433] bexpr ::= DOES bexpr QUESTIONMARK 
[434] bexpr ::= IS bexpr QUESTIONMARK 
[435] bexpr ::= WAS bexpr QUESTIONMARK 
[436] bexpr ::= strexpr gt strexpr 
[437] bexpr ::= strexpr lt strexpr 
[438] bexpr ::= strexpr gte strexpr 
[439] bexpr ::= strexpr lte strexpr 
[440] bexpr ::= strexpr MATCHES strexpr 
[441] bexpr ::= bexpr eq bexpr 
[442] bexpr ::= bexpr neq bexpr 
[443] bexpr ::= bexpr AND bexpr 
[444] bexpr ::= bexpr OR bexpr 
[445] bexpr ::= NOT bexpr 
[446] bexpr ::= dexpr isnull 
[447] bexpr ::= array_expr isnull 
[448] bexpr ::= strexpr isnull 
[449] bexpr ::= eexpr isnull 
[450] bexpr ::= dexpr isnotnull 
[451] bexpr ::= array_expr isnotnull 
[452] bexpr ::= strexpr isnotnull 
[453] bexpr ::= eexpr isnotnull 
[454] bexpr ::= USING eexpr LPAREN bexpr RPAREN 
[455] bexpr ::= LPAREN bexpr RPAREN 
[456] bexpr ::= LPAREN BOOLEAN RPAREN indx_expr 
[457] bexpr ::= BOOLEAN RARRAY LBRACE iexpr RBRACE 
[458] bexpr ::= dexpr eq dexpr 
[459] bexpr ::= dexpr lt dexpr 
[460] bexpr ::= dexpr IS BEFORE dexpr 
[461] bexpr ::= dexpr gt dexpr 
[462] bexpr ::= dexpr IS AFTER dexpr 
[463] bexpr ::= dexpr gte dexpr 
[464] bexpr ::= dexpr lte dexpr 
[465] bexpr ::= dexpr IS BETWEEN dexpr AND dexpr 
[466] bexpr ::= eexpr eq eexpr 
[467] bexpr ::= eexpr neq eexpr 
[468] bexpr ::= BOOLEAN VALUE OF operatorstatements 
[469] bexpr ::= BOOL_FUNCTION 
[470] eq ::= EQ 
[471] eq ::= IS EQUAL TO 
[472] eq ::= EQUAL TO 
[473] neq ::= NEQ 
[474] neq ::= IS NOT EQUAL TO 
[475] neq ::= NOT EQUAL TO 
[476] gt ::= GT 
[477] gt ::= IS GREATER THAN 
[478] gt ::= GREATER THAN 
[479] gte ::= GTE 
[480] gte ::= IS GREATER THAN OR EQUAL TO 
[481] gte ::= GREATER THAN OR EQUAL TO 
[482] lt ::= LT 
[483] lt ::= IS LESS THAN 
[484] lt ::= LESS THAN 
[485] lte ::= LTE 
[486] lte ::= IS LESS THAN OR EQUAL TO 
[487] lte ::= LESS THAN OR EQUAL TO 
[488] isnull ::= ISNULL 
[489] isnull ::= IS NULL 
[490] isnotnull ::= ISNOTNULL 
[491] isnotnull ::= IS NOT NULL 

------- CUP v0.11a beta 20060608 Parser Generation Summary -------
  0 errors and 1 warning
  163 terminals, 71 non-terminals, and 492 productions declared, 
  producing 1246 unique parse states.
  1 terminal declared but not used.
  0 non-terminal declared but not used.
  0 productions never reduced.
  0 conflicts detected (0 expected).
  Code written to "nul:.java", and "nul:.java".
---------------------------------------------------- (v0.11a beta 20060608)
